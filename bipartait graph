#include<bits/stdc++.h>
using namespace std;
vector<int>ve[40000];
int dis[40000];
int visit[40000];
int color[40000];
int cnt[2];
void dfs(int node, int col){
    if(visit[node]==1)
        return;
    visit[node]=1;
    color[node] = col;
    cnt[color[node]]++;
   // for(auto u : ve[node]);
   for(int i=0; i<ve[node].size(); i++)
        dfs(ve[node][i],col^1);
}
void solve(){
    int n,i,u,v,ans=0;
    cin>>n;
    for(i=1; i<=n; i++){
        cin>>u>>v;
        ve[u].push_back(v);
        ve[v].push_back(u);
    }
    for(i=0; i<n; i++){
        if(visit[i]) continue;
        dfs(i,0);
        ans+=max(cnt[0],cnt[1]);
        cnt[0]=cnt[1]=0;
    }
    cout<<ans<<endl;
}
int main(){
    int tc,i,n;
    cin>>tc;
    while(tc--){
        solve();
    }
return 0;
}
